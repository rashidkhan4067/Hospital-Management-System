# Generated by Django 4.2 on 2025-07-23 05:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('FINANCIAL', 'Financial'), ('OPERATIONAL', 'Operational'), ('CLINICAL', 'Clinical'), ('PATIENT', 'Patient Analytics'), ('STAFF', 'Staff Performance'), ('QUALITY', 'Quality Metrics'), ('COMPLIANCE', 'Compliance')], max_length=20)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly'), ('ON_DEMAND', 'On Demand')], default='MONTHLY', max_length=15)),
                ('sql_query', models.TextField(blank=True, help_text='SQL query for data extraction')),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('chart_config', models.JSONField(blank=True, default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('allowed_roles', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['report_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('dashboard_type', models.CharField(choices=[('EXECUTIVE', 'Executive Dashboard'), ('CLINICAL', 'Clinical Dashboard'), ('FINANCIAL', 'Financial Dashboard'), ('OPERATIONAL', 'Operational Dashboard'), ('DEPARTMENT', 'Department Dashboard'), ('PERSONAL', 'Personal Dashboard')], max_length=15)),
                ('layout_config', models.JSONField(blank=True, default=dict)),
                ('refresh_interval_minutes', models.PositiveIntegerField(default=15)),
                ('is_public', models.BooleanField(default=False)),
                ('allowed_roles', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='accessible_dashboards', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['dashboard_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='KPIMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('FINANCIAL', 'Financial'), ('OPERATIONAL', 'Operational'), ('CLINICAL', 'Clinical Quality'), ('PATIENT_SATISFACTION', 'Patient Satisfaction'), ('STAFF_PERFORMANCE', 'Staff Performance'), ('EFFICIENCY', 'Efficiency')], max_length=25)),
                ('metric_type', models.CharField(choices=[('COUNT', 'Count'), ('PERCENTAGE', 'Percentage'), ('AVERAGE', 'Average'), ('SUM', 'Sum'), ('RATIO', 'Ratio'), ('RATE', 'Rate')], max_length=15)),
                ('calculation_method', models.TextField(help_text='Description of how this metric is calculated')),
                ('sql_query', models.TextField(blank=True)),
                ('target_value', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('warning_threshold', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('critical_threshold', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('decimal_places', models.PositiveIntegerField(default=2)),
                ('chart_type', models.CharField(default='line', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_kpis', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'KPI Metric',
                'verbose_name_plural': 'KPI Metrics',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('PAGE_VIEW', 'Page View'), ('SEARCH', 'Search'), ('EXPORT', 'Export'), ('PRINT', 'Print'), ('CREATE', 'Create Record'), ('UPDATE', 'Update Record'), ('DELETE', 'Delete Record')], max_length=15)),
                ('page_url', models.URLField(blank=True)),
                ('page_title', models.CharField(blank=True, max_length=200)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('session_id', models.CharField(blank=True, max_length=40)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('page_load_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ReportExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_id', models.CharField(editable=False, max_length=12, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=15)),
                ('parameters_used', models.JSONField(blank=True, default=dict)),
                ('result_data', models.JSONField(blank=True, default=dict)),
                ('row_count', models.PositiveIntegerField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('execution_time_seconds', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('memory_usage_mb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('stack_trace', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('executed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_executions', to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='analytics.analyticsreport')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='KPIValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=4, max_digits=15)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True)),
                ('calculated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('calculated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calculated_kpi_values', to=settings.AUTH_USER_MODEL)),
                ('kpi_metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='analytics.kpimetric')),
            ],
            options={
                'ordering': ['-period_end'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('widget_type', models.CharField(choices=[('KPI_CARD', 'KPI Card'), ('CHART', 'Chart'), ('TABLE', 'Data Table'), ('GAUGE', 'Gauge'), ('PROGRESS', 'Progress Bar'), ('LIST', 'List'), ('CALENDAR', 'Calendar'), ('MAP', 'Map')], max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('custom_query', models.TextField(blank=True)),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=4)),
                ('height', models.PositiveIntegerField(default=3)),
                ('chart_config', models.JSONField(blank=True, default=dict)),
                ('display_options', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='analytics.dashboard')),
                ('kpi_metric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='analytics.kpimetric')),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='analytics.analyticsreport')),
            ],
            options={
                'ordering': ['dashboard', 'position_y', 'position_x'],
            },
        ),
        migrations.AddIndex(
            model_name='useranalytics',
            index=models.Index(fields=['user', '-timestamp'], name='analytics_u_user_id_952e6f_idx'),
        ),
        migrations.AddIndex(
            model_name='useranalytics',
            index=models.Index(fields=['action', '-timestamp'], name='analytics_u_action_7d9a63_idx'),
        ),
        migrations.AddIndex(
            model_name='useranalytics',
            index=models.Index(fields=['-timestamp'], name='analytics_u_timesta_a7345c_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['report', '-started_at'], name='analytics_r_report__2854f5_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['executed_by', '-started_at'], name='analytics_r_execute_bb859f_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['status'], name='analytics_r_status_1a8f20_idx'),
        ),
        migrations.AddIndex(
            model_name='kpivalue',
            index=models.Index(fields=['kpi_metric', '-period_end'], name='analytics_k_kpi_met_bc963e_idx'),
        ),
        migrations.AddIndex(
            model_name='kpivalue',
            index=models.Index(fields=['-calculated_at'], name='analytics_k_calcula_339118_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='kpivalue',
            unique_together={('kpi_metric', 'period_start', 'period_end')},
        ),
    ]
